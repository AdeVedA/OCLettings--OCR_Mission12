name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    name: Tests et Validation
    runs-on: ubuntu-latest

#    services:
#      sqlite3:
#        image: sqlite:latest

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: r√©cup√©rer le code du repo
        uses: actions/checkout@v4

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Configuration Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Installation des d√©pendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Linting avec flake8
        run: flake8 .

      - name: Tests avec pytest
        run: |
          pytest --maxfail=1 --disable-warnings -q
          pytest --cov=src --cov-report=term-missing --cov-fail-under=90
        env:
          SENTRY_DSN: "${{ secrets.SENTRY_DSN }}"
          SECRET_KEY: "${{ secrets.SECRET_KEY_DJANGO }}"

      - run: echo "üçè This job's status is ${{ job.status }}."

  build-and-push:
    name: Build de l'image et push sur dockhub
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: r√©cup√©rer le repo
        uses: actions/checkout@v3

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
  
      - name: log in to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: build the docker image
        run: |
          docker build \
            --build-arg SENTRY_DSN="${{ secrets.SENTRY_DSN }}" \
            --build-arg SECRET_KEY_DJANGO="${{ secrets.SECRET_KEY_DJANGO }}" \
            -t "${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}" .
    
      - name: push docker image to docker hub
        run: docker push ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}

#  deploy:
#    name: D√©ploiement de l'image sur serveur de l'herbergeur Render
#    runs-on: ubuntu-latest
#    needs: build-and-push